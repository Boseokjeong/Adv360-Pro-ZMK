macro_quotes: macro_quotes{
compatible = "zmk,behavior-macro";
label = "macro_quotes";
#binding-cells = <0>;
bindings = <&kp SQT>, <&kp SQT>, <&kp LEFT>;
};
macro_dquotes: macro_dquotes{
compatible = "zmk,behavior-macro";
label = "macro_dquotes";
#binding-cells = <0>;
bindings = <&kp DQT>, <&kp DQT>, <&kp LEFT>;
};
macro_braces: macro_braces{
compatible = "zmk,behavior-macro";
label = "macro_braces";
#binding-cells = <0>;
bindings = <&kp LBRC>, <&kp RBRC>, <&kp LEFT>;
};
macro_parens: macro_parens{
compatible = "zmk,behavior-macro";
label = "macro_parens";
#binding-cells = <0>;
bindings = <&kp LPAR>, <&kp RPAR>, <&kp LEFT>;
};
macro_brackets: macro_brackets{
compatible = "zmk,behavior-macro";
label = "macro_brackets";
#binding-cells = <0>;
bindings = <&kp LBKT>, <&kp RBKT>, <&kp LEFT>;
};
macro_kinesis: macro_kinesis{
compatible = "zmk,behavior-macro";
label = "macro_kinesis";
#binding-cells = <0>;
bindings = <&kp LS(K)>, <&kp I>, <&kp N>, <&kp E>, <&kp S>, <&kp I>, <&kp S>;
}; 
dollar_tilde: dollar_tilde {
    compatible = "zmk,behavior-mod-morph";
    label = "DOLLAR_TILDE";
    bindings = <&kp DOLLAR>, <&kp TILDE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
ampersand_percent: ampersand_percent {
    compatible = "zmk,behavior-mod-morph";
    label = "AMPERSAND_PERCENT";
    bindings = <&kp AMPERSAND>, <&kp PERCENT>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
left_bracket_n7: left_bracket_n7 {
    compatible = "zmk,behavior-mod-morph";
    label = "LEFT_BRACKET_N7";
    bindings = <&kp LEFT_BRACKET>, <&kp N7>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
left_brace_n5: left_brace_n5 {
    compatible = "zmk,behavior-mod-morph";
    label = "LEFT_BRACE_N5";
    bindings = <&kp LEFT_BRACE>, <&kp N5>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
right_brace_n3: right_brace_n3 {
    compatible = "zmk,behavior-mod-morph";
    label = "RIGHT_BRACE_N3";
    bindings = <&kp RIGHT_BRACE>, <&kp N3>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
left_parenthesis_n1: left_parenthesis_n1 {
    compatible = "zmk,behavior-mod-morph";
    label = "LEFT_PARENTHESIS_N1";
    bindings = <&kp LEFT_PARENTHESIS>, <&kp N1>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
equal_n9: equal_n9 {
    compatible = "zmk,behavior-mod-morph";
    label = "EQUAL_N9";
    bindings = <&kp EQUAL>, <&kp N9>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
asterisk_n0: asterisk_n0 {
    compatible = "zmk,behavior-mod-morph";
    label = "ASTERISK_N0";
    bindings = <&kp ASTERISK>, <&kp N0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
right_parenthesis_n2: right_parenthesis_n2 {
    compatible = "zmk,behavior-mod-morph";
    label = "RIGHT_PARENTHESIS_N2";
    bindings = <&kp RIGHT_PARENTHESIS>, <&kp N2>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
plus_n4: plus_n4 {
    compatible = "zmk,behavior-mod-morph";
    label = "PLUS_N4";
    bindings = <&kp PLUS>, <&kp N4>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
right_bracket_n6: right_bracket_n6 {
    compatible = "zmk,behavior-mod-morph";
    label = "RIGHT_BRACKET_N6";
    bindings = <&kp RIGHT_BRACKET>, <&kp N6>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
exclamation_n8: exclamation_n8 {
    compatible = "zmk,behavior-mod-morph";
    label = "EXCLAMATION_N8";
    bindings = <&kp EXCLAMATION>, <&kp N8>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
hash_grave: hash_grave {
    compatible = "zmk,behavior-mod-morph";
    label = "HASH_GRAVE";
    bindings = <&kp HASH>, <&kp GRAVE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
at_caret: at_caret {
    compatible = "zmk,behavior-mod-morph";
    label = "AT_CARET";
    bindings = <&kp AT>, <&kp CARET>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
